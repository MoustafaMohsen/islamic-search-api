using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;

namespace IslamicSearch.Controllers
{
    //[Route("api/[controller]")]
    //[ApiController]
    /*
    public class ValuesController : ControllerBase
    {
        // GET api/values
        [HttpGet]
        public ActionResult<IEnumerable<string>> Get()
        {
            return new string[] { "value1", "value2" };
        }

        // GET api/values/5
        [HttpGet("{id}")]
        public ActionResult<string> Get(int id)
        {
            return "value";
        }

        // POST api/values
        [HttpPost]
        public void Post([FromBody] string value)
        {
        }

        // PUT api/values/5
        [HttpPut("{id}")]
        public void Put(int id, [FromBody] string value)
        {
        }

        // DELETE api/values/5
        [HttpDelete("{id}")]
        public void Delete(int id)
        {
        }


        ///===========old Code

        /*
                [HttpGet("adresses/{src}")]
        public async Task<ActionResult> GetAdtessed(int src)
        {
            var queryable = db.HadithBlocks.Select(
                block => new HadithBlocks()
                {
                    content = block.content,
                    id = block.id,
                    Refrences=block.Refrences,// = block.Refrences,
                    sources = block.sources,
                    src = block.src
                }
                );
            var models = queryable.Where(
                            b =>
                                b.src == src
                                &&
                                b.Refrences.Any()
                        ).ToList();

            var RefrenceMap = new List<hadithRefrenceMap>();

            for (int i = 0; i < models.Count; i++)
            {
                var hadith = models[i];
                var vchList = new List<ChIndex>();
                var number = -1 ;
                for (int i2 = 0; i2 < hadith.Refrences.Count ; i2++)
                {
                    var item = hadith.Refrences[i2];
                    //if Vol Chapter
                    if (item.Refrencetype == "vol book hadith")
                    {
                        var ch = new ChIndex()
                        {
                            name = item.name,
                            vol = item.value1,
                            ch = item.value2,
                            had = item.value3
                        };
                        vchList.Add(ch);
                    }
                    else
                    //if Chapter
                    if (item.Refrencetype == "book hadith")
                            {
                        var ch = new ChIndex()
                        {
                            name = item.name,
                            vol = item.value3,
                            ch = item.value1,
                            had = item.value2
                        };
                        vchList.Add(ch);
                    }
                    else
                    //if number
                    if (item.Refrencetype == "hadith")
                    {
                        number = item.value1;
                    }
                    else
                        throw null;

                }

                string wtf="k";
                if (number == -1)
                    wtf = "a7a";

                var refrenceitem = new hadithRefrenceMap() {
                    src = src,
                    identifier = hadith.id,
                    vch = vchList,
                    number = number
                };
                RefrenceMap.Add(refrenceitem);
            }

            return Ok(StringfyObject(RefrenceMap));
        }

        [HttpGet("Lib/{filename}")]
        public Models.Lib2.Book LibTest(string filename)
        {
            var filepath = "Json/Hadiths/lib/" + filename;
            string fileString = JsonfileReader(filepath);


            var hadithObj = JsonConvert.DeserializeObject<Models.Lib2.Book>(fileString);

            return hadithObj;
        }
        


        // GET api/<controller>/5
        [HttpGet("up")]
        public ActionResult<string> UpdateDatabase()
        {
            var logger = "";
            int counter = 0;
            string ketab = "MuslimCollection";
            var fileName = "Json/Hadiths/" + ketab +".json" ;
            var fileString = JsonfileReader(fileName);
            var hadithObj = JsonConvert.DeserializeObject<HadithCollection>(fileString);

            List<Hadith> Hadithsjson = new List<Hadith>() ;
            for(int i = 0; i < hadithObj.hadiths.hadith.Count; i++)
            {
                Hadith hadith = hadithObj.hadiths.hadith[i];
                Hadithsjson.Add(hadith);
                counter++;
            }

            HadithCollection HadithsCol = new HadithCollection()
            {
                code = hadithObj.code,
                copyright = hadithObj.copyright,
                name = hadithObj.name,
                referenceDefinitions = hadithObj.referenceDefinitions,
                hadiths = new Hadiths(){ hadith= Hadithsjson }
            };

            //db.HadithCollection.Add(HadithsCol);

            //db.SaveChanges();
            logger = fileName + "    " + "  Count" + counter;

            return Content(logger);
        }
        /*

        [HttpGet("testdb/{code}/")]
        public string getHadith(string code)
        {/*
            .Select(
                a => new HadithCollection()
                {
                    code = a.code,
                    hadiths = a.hadiths,
                    copyright = a.copyright,
                    referenceDefinitions = a.referenceDefinitions,
                    name = a.name
                }
                )
                */
        
    /*
    int count = 0;
    int number = 5;
    var queryable = db.HadithCollection.Select(
        a => new HadithCollection()
        {
            code = a.code,
            hadiths = a.

            hadiths,
            copyright = a.copyright,
            referenceDefinitions = a.referenceDefinitions,
            name = a.name
        }
        )
        .First();
    var hadiths = new List<Models.Collections.Hadith>();
    for (int i = 0; i < 1; i++)
    {
        var getnumber = number + i;
        var hadith = queryable.hadiths.hadith[getnumber];
        hadiths.Add(hadith);
    }
    queryable.hadiths.hadith = hadiths;

*/
        /*
        for (int i = 0; i < Hadithquery.Count; i++)
        {
            Hadith hadith = Hadithquery[i];
            for (int i2 = 0; i2 < hadith.references.Count; i2++)
            {
                Reference reference = hadith.references[i2];
                for (int i3 = 0; i3 < reference.parts.Count; i3++)
                {
                    Astring astring = reference.parts[i3];
                    count++;
                }
            }
        }
        */
        /*
        return count.ToString();
    }
    */


        //UPLOAD up 




        /*
        [HttpGet("Libtest/{number}")]
        public Models.Lib2.Book LibTest1(int number)
        {


            var Blockquery = db.Books.SelectMany(
                book => book.blocks.
                Select(
                    block => new Block()
                    {
                        content = block.content,
                        references = block.references,
                        Sources = block.Sources,
                        id= block.id
                    }
                    )
                ).Distinct();
            var Defenitionquery = db.Books.SelectMany(
                book => book.Defenitions.
                Select(
                    Defenition => new Defenition()
                    {
                        name = Defenition.name,
                        value = Defenition.value,
                        id = Defenition.id
                    }
                    )
                ).ToList();
            var Bookquery = db.Books.Select(
                book => new Book()
                {
                    id=book.id
                }
                ).ToList();
            Book Bookout = Bookquery.ToList().FirstOrDefault();
            Bookout.Defenitions = Defenitionquery.ToList();
            Bookout.blocks = Blockquery.ToList();

            return Bookout;
        }

        [HttpGet("linq")]
        public string linqpractice()
        {
            var Values = db.Books.SelectMany(book => book.blocks)/*.Distinct().Select(
                    block => new Block()
                    {
                        content = block.content,
                        references = block.references,
                        Sources = block.Sources,
                        id = block.id
                    }
            )*/
        /*
        .SelectMany(refr => refr.references)
        */
        /*
        .Select(x=> new Value()
        {
             name = x.name,
             value = x.value

        })*/

        /*
            ;

            List<Value> list = Values.ToList(); ;


            return "";
        }
        */



        /*
        [HttpGet("db/{src}/{number}")]
        public ActionResult<HadithModel> TestDB(int src,int number)
        {
            var model = db.HadithModel.Select(
                a => new HadithModel
                {
                    src = a.src,
                    id = a.id,
                    arabicText = a.arabicText,
                    arabicHTML = a.arabicHTML,
                    englishText = a.englishText,
                    englishHTML = a.englishHTML,
                    number = a.number,
                    in_book_refrence = a.in_book_refrence,
                    old_refrence = a.old_refrence,
                }
                );
            model = model.Where(m => m.src == src);
            return model.FirstOrDefault(m => m.number == number);
        }
        */

        /*
        [HttpGet("downloaddb")]
        public List<HadithModel> DownloadDb()
        {
            var model = db.HadithModel.Select(a =>
                     new HadithModel
                     {
                         src = a.src,
                         id = a.id,
                         arabicText = a.arabicText,
                         arabicHTML = a.arabicHTML,
                         englishText = a.englishText,
                         englishHTML = a.englishHTML,
                         number = a.number,
                         in_book_refrence = a.in_book_refrence,
                         old_refrence = a.old_refrence,
                     }
                ).ToList();

            model = model.Where(m => m.src == 3).ToList();
            return model;

        }
        
        // GET api/<controller>/5
        [HttpGet("tag")]
        public List<tagindex> getTags()
        {
            var model = db.HadithModel.Select(a =>
                     new HadithModel
                     {
                         src = a.src,
                         id = a.id,
                         arabicText = a.arabicText,
                         arabicHTML = a.arabicHTML,
                         englishText = a.englishText,
                         englishHTML = a.englishHTML,
                         number = a.number,
                         in_book_refrence = a.in_book_refrence,
                         old_refrence = a.old_refrence,
                     }
                ).ToList();

            model = model.Where(m => m.src == 2).ToList();
            List<tagindex> tagindex = new List<tagindex>() { };
            foreach (var item in model)
            {
                if (!isNull(item.in_book_refrence))
                {
                    tagindex tag = new tagindex()
                    {
                        tag = item.in_book_refrence.tag
                    };
                    tagindex.Add(tag);
                }
            }
            return tagindex;

        }//gettag
        
        // GET api/<controller>/5
        [HttpGet("newb")]
        public bukhariindex newb()
        {
            var model = db.HadithModel.Select(a =>
                     new HadithModel
                     {
                         src = a.src,
                         id = a.id,
                         //arabicText = a.arabicText,
                         //arabicHTML = a.arabicHTML,
                         //englishText = a.englishText,
                        // englishHTML = a.englishHTML,
                        // number = a.number,
                         in_book_refrence = a.in_book_refrence,
                         old_refrence = a.old_refrence,
                     }
                ).ToList();

            model = model.Where(
                m => m.src == 1
                ).ToList();
            



            //count each chapter in new
            List<bnewIndex> newindx = new List<bnewIndex>() { };            
            for (int i = -1; i < 100; i++)
            {
                if (i == 0 )
                {
                    continue;
                }
                if ( 
                    isNullOr0( model.Where(m => m.in_book_refrence.book == i).Count() ) 
                    )
                {
                    break;
                }

                var nhd = 0;
                //get all hadiths in i chapter
                var chaptermodel = model.Where(m => m.in_book_refrence.book == i).ToList();

                //get biggest hadith number and save it to nhd
                foreach (var hadith in chaptermodel)
                {
                    if (hadith.in_book_refrence.hadith >= nhd)
                    {
                        nhd = hadith.in_book_refrence.hadith;
                    }
                }

                //add this chapter index to the list of newixdex
                var bnew = new bnewIndex() { nc = i, nh = nhd };
                newindx.Add(bnew);
            }

            //count in old refrence 
            List<boldIndex> oldindx = new List<boldIndex>() { };
            for (int i = 1; i < 100; i++)
            {
                if (
                    isNullOr0(model.Where(m => m.old_refrence.book == i).Count())
                    )
                {
                    break;
                }

                var ohd = 1;
                var ohf = 10000;
                //get all hadiths in i chapter
                var chaptermodel = model.Where(m => m.old_refrence.book == i).ToList();

                //get biggest hadith number and save it to nhd
                foreach (var hadithelement in chaptermodel)
                {
                    var oldbook = hadithelement.old_refrence;
                    if (oldbook.hadith >= ohd)
                    {
                        ohd = oldbook.hadith;
                    }
                    if (oldbook.hadith <= ohf)
                    {
                        ohf = oldbook.hadith;
                    }
                }

                //add this chapter index to the list of newixdex
                var boldIndex = new boldIndex() { oc = i, oh = ohd, ohf = ohf };
                oldindx.Add(boldIndex);
            }
            bukhariindex bindex = new bukhariindex() {bnew= newindx, bold= oldindx };
            return bindex;
            

        }//bnew
        */
        /*
        public bool IndexExsists(HadithModel hadithModel, List<bnewIndex> newindx)
        {
            bool nonexsist = false;
            foreach (var item in newindx)
            {
                if (
                    item.nc == hadithModel.in_book_refrence.book
                    )
                {
                    nonexsist = true;
                }
            }
            return nonexsist;
        }
        public bool IndexExsists(HadithModel hadithModel, List<boldIndex> oldindx)
        {
            bool nonexsist = false;
            foreach (var item in oldindx)
            {
                if (
                    item.oc == hadithModel.old_refrence.book
                    )
                {
                    nonexsist = true;
                }
            }
            return nonexsist;
        }
        */
        /*
        // GET api/<controller>/5
        [HttpGet("mod")]
        public HadithModel modDatabase()
        {
            

            var queryable = db.HadithModel.Select(a =>
                     new HadithModel
                     {
                         src = a.src,
                         id = a.id,
                         arabicText = a.arabicText,
                         arabicHTML = a.arabicHTML,
                         englishText = a.englishText,
                         englishHTML = a.englishHTML,
                         number = a.number,
                         in_book_refrence = a.in_book_refrence,
                         old_refrence = a.old_refrence,
                     }
                );

            foreach (var item in queryable)
            {
                if (item.src == 2)
                {
                    var newtag = cleanwhitespaces(item.in_book_refrence.tag);
                    var editItem = db.HadithModel.FirstOrDefault(m => m.id == item.id);
                    editItem.in_book_refrence.tag = newtag;
                    db.Entry(editItem).State = EntityState.Modified;

                }
            }




            //db.SaveChanges();
            return db.HadithModel.FirstOrDefault();

            return null;
        }*/


        /*
        public string cleanwhitespaces(string srt)
        {
            return Regex.Replace(srt, @"\s+", "");
        }
        */

        /*
        [HttpGet("rm")]
        public ActionResult removeDate()
        {
                var model = db.HadithModel.Select(
                    a=> new HadithModel
                    {
                        src = a.src,
                        id = a.id,
                        arabicText = a.arabicText,
                        arabicHTML = a.arabicHTML,
                        englishText = a.englishText,
                        englishHTML = a.englishHTML,
                        number = a.number,
                        in_book_refrence = a.in_book_refrence,
                        old_refrence = a.old_refrence,
                    }
                    );
            model = model.Where(m => m.src == 2);
            for (int i = 7054; i <= 7156; i++)
            {
                var item = model.FirstOrDefault(m => m.number == i);

                var in_book_id = item.in_book_refrence.id;
                var old_refrence_id = item.old_refrence.id;

                var Delete_hadithModel = db.HadithModel.SingleOrDefault(m => m.id == item.id);
                db.HadithModel.Remove(Delete_hadithModel);

                var Delete_in_book = db.In_Book_Refrence.SingleOrDefault( m=> m.id == in_book_id);
                db.In_Book_Refrence.Remove(Delete_in_book);

                var Delete_old_refrence = db.Old_refrence.SingleOrDefault(m => m.id == old_refrence_id);
                db.Old_refrence.Remove(Delete_old_refrence);

            }//for

            //db.SaveChanges();
            return Ok("Done Removeing");
        }
        */

        /*

        // POST api/<controller>
        [HttpPost("request/{source}")]
        public ActionResult<HadithModel> Post([FromBody] HadithRequest request,string source)
        {
            if (!ModelState.IsValid) { return BadRequest(ModelState); }

            HadithModel hadith = null;

            if (source == "hadith")
            {
                IQueryable<HadithModel> queryable = null;/*db.HadithModel.Select(a =>
                     new HadithModel
                     {
                         src = a.src,
                         id = a.id,
                         arabicText = a.arabicText,
                         arabicHTML = a.arabicHTML,
                         englishText = a.englishText,
                         englishHTML = a.englishHTML,
                         number = a.number,
                         in_book_refrence = a.in_book_refrence,
                         old_refrence = a.old_refrence,
                     }
                );*/
        /*
        hadith = searchRequest(request,queryable);
        //hadith = queryable.FirstOrDefault(m => m.src == request.src && m.number == request.number );
        /*
        hadith = queryable.FirstOrDefault(
        m => m.src == request.src &&
        m.in_book_refrence.book == request.in_book_refrence.book &&
        m.in_book_refrence.hadith == request.in_book_refrence.hadith);
        *//*
    }


    if (hadith == null)
    {
        return NotFound();
    }

    return hadith;
}
*/


        /*
    //take book and Return volume number
    public int muslimVol(int b) { return b < 5 ? 1 : b < 6 ? 2 : b < 9 ? 3 : b < 21 ? 4 : b < 30 ? 5 : b < 40 ? 6 : b < 44 ? 7 : 0; }


    public HadithModel searchRequest(HadithRequest request, IQueryable<HadithModel> queryable)
    {
        HadithModel hadith= new HadithModel { };
        string number = !isNullOr0(request.number)? "number" : "";
        string newCh = !isNullOr0(request.in_book_refrence.book) && !isNullOr0(request.in_book_refrence.hadith) ? "newCh" : "";
        string newVol = !isNullOr0(request.in_book_refrence.book) && !isNullOr0(request.in_book_refrence.hadith) && !isNullOr0(request.in_book_refrence.vol) ? "newVol" : "";
        string oldCh = !isNullOr0(request.old_refrence.book) && !isNullOr0(request.old_refrence.hadith) ? "oldCh" : "";
        string oldVol = !isNullOr0(request.old_refrence.book) && !isNullOr0(request.old_refrence.hadith) && !isNullOr0(request.old_refrence.vol) ? "oldVol" : "";
        string tag = !isNullOr0(request.in_book_refrence.tag) ? "tag" : "";
        List<string> Selectors = new List<string> {
            number,newCh,newVol,oldCh, oldVol, tag 
        };
        foreach (var selector in Selectors)
        {   
           var Break = false; 
            switch (selector)
            {
                case "number":
                    { hadith = queryable.FirstOrDefault(m => m.number == request.number && m.src == request.src); Break = true; }
                    break;
                case "newCh":
                    { hadith = queryable.FirstOrDefault(m => m.src == request.src && m.in_book_refrence.book == request.in_book_refrence.book && m.in_book_refrence.hadith == request.in_book_refrence.hadith); Break = true; }
                    break;
                case "newVol":
                    { hadith = queryable.FirstOrDefault(m => m.src == request.src && m.in_book_refrence.vol == request.in_book_refrence.vol && m.in_book_refrence.book == request.in_book_refrence.book && m.in_book_refrence.hadith == request.in_book_refrence.hadith); Break = true; }
                    break;
                case "oldCh":
                    { hadith = queryable.FirstOrDefault(m => m.src == request.src && m.old_refrence.book == request.old_refrence.book && m.old_refrence.hadith == request.old_refrence.hadith); Break = true; }
                    break;
                case "oldVol":
                    { hadith = queryable.FirstOrDefault(m => m.src == request.src && m.old_refrence.vol == request.old_refrence.vol && m.old_refrence.book == request.old_refrence.book && m.old_refrence.hadith == request.old_refrence.hadith); Break = true; }
                    break;
                case "tag":
                    {
                        hadith = queryable.Where(m => equaltag(m.in_book_refrence.tag,request.in_book_refrence.tag)).FirstOrDefault();
                        Break = true; }
                    break;


                default:
                    break;
            }
            if(Break) break;
        }

        return hadith;
    }
    */

        /*
        // To convert the Extracted from the browser to Model
        public HadithModel otherConvertHadithObject(JHadithObject obj)
        {
            var model = new HadithModel();
            model.in_book_refrence = new Models.In_Book_Refrence();
            model.old_refrence = new Models.Old_refrence();
            model.arabicHTML = obj.arabicHTML;
            model.arabicText = obj.arabicText;
            model.englishHTML = obj.englishHTML;
            model.englishText = obj.englishText;
            model.id = obj.id;


            model.number = stringToInt(obj.number);

            model.in_book_refrence.book = stringToInt(obj.in_book_refrence.book);
            model.in_book_refrence.hadith = stringToInt(obj.in_book_refrence.hadith);

            model.old_refrence.vol =   stringToInt(obj.old_refrence.vol);
            model.old_refrence.book = stringToInt(obj.old_refrence.book);
            model.old_refrence.hadith = stringToInt(obj.old_refrence.hadith);


            return model;
        }
        */
        /*
        //Special converter for muslim ketab
        // To convert the Extracted from the browser to Model
        public HadithModel MuslimConvertHadithObject(JMuslimHadithObject obj)
        {
            var model = new HadithModel();
            model.in_book_refrence = new Models.In_Book_Refrence();
            model.old_refrence = new Models.Old_refrence();
            model.arabicHTML = obj.arabicHTML;
            model.arabicText = obj.arabicText;
            model.englishHTML = obj.englishHTML;
            model.englishText = obj.englishText;
            model.id = obj.id;


            model.number = stringToInt(""+obj.number);

            model.in_book_refrence.book = obj.mini_new_refrence.book;
            model.in_book_refrence.hadith = stringToInt(obj.mini_new_refrence.hadith);
            model.in_book_refrence.tag = obj.in_book_refrence;

            model.old_refrence.vol =  muslimVol(stringToInt(obj.old_refrence.book)) ;
            model.old_refrence.book = stringToInt(obj.old_refrence.book);
            model.old_refrence.hadith = stringToInt(obj.old_refrence.hadith);


            return model;
        }
        */
    }
    */
    /*
 public class InBookRefrence
 {
     public string book { get; set; }
     public string hadith { get; set; }
 }

 public class OldRefrence
 {
     public string vol { get; set; } = "0";
     public string book { get; set; }
     public string hadith { get; set; }

 }

 //Extracted hadith Object Class
 public class JHadithObject
 {
     public int id { get; set; }
     public string number { get; set; }
     public InBookRefrence in_book_refrence { get; set; }
     public OldRefrence old_refrence { get; set; }
     public string arabicText { get; set; }
     public string arabicHTML { get; set; }
     public string englishText { get; set; }
     public string englishHTML { get; set; }

 }

 //Special case for muslim ketab

 public class MiniNewRefrence
 {
     public int book { get; set; }
     public string hadith { get; set; }
 }
 public class JMuslimHadithObject
 {
     public int id { get; set; }
     public string number { get; set; }
     public string in_book_refrence { get; set; }
     public MiniNewRefrence mini_new_refrence { get; set; }
     public OldRefrence old_refrence { get; set; }
     public string arabicText { get; set; }
     public string arabicHTML { get; set; }
     public string englishText { get; set; }
     public string englishHTML { get; set; }
 }



 public class SelectClass
 {
     public int id { get; set; }
     public int number { get; set; } = 0;
     public string arabicHTML { get; set; }
     public string arabicText { get; set; }
     public string englishHTML { get; set; }
     public string englishText { get; set; }
     public In_Book_Refrence in_book_refrence { get; set; }
     public Old_refrence old_refrence { get; set; }
 }

 public class tagindex
 {
     public string tag { get; set; }
 }

 public class bnewIndex
 {
     public int nh { get; set; }
     public int nc { get; set; }
 }
 public class boldIndex
 {
     public int oh { get; set; }
     public int ohf { get; set; }
     public int oc { get; set; }
 }
 public class bukhariindex
 {
     public List<bnewIndex> bnew { get; set; }
     public List<boldIndex> bold { get; set; }
 }
 public class muslimindex
 {
     public int nh { get; set; }
     public int nc { get; set; }
     public int oh { get; set; }
     public int oc { get; set; }
 }
 */

}//Namespace

/*
            //Validations
            if (!ModelState.IsValid) { return BadRequest(ModelState); }//validate
            if (grocery.Name == "") { return Content("No Name"); }//validate
            if (grocery == null) { return NotFound(); }//validate


            if (req == "add")
            {
                //--------------add logic-------------//
                //PostValidation
                if (GroceryExistsName(grocery.Name)) { return Ok("name already exists"); }//validate

                grocery.MoreInformations = UpdateInformationsAdd(grocery.MoreInformations);

db.Grocery.Add(grocery);
                await db.SaveChangesAsync();

                return Ok("Added");
            }
*/

/*
List<HadithModel> model = new List<HadithModel>();

//Read File
var fileName = "Json/.Bukhari.modelJson";
var fileString = JsonfileReader(fileName);
var hadithObj = JsonConvert.DeserializeObject<List<JMuslimHadithObject>>(fileString);

//convert json to hadith
for (int i2 = 0; i2 < hadithObj.Count; i2++)
{
var row = MuslimConvertHadithObject(hadithObj[i2]);
model.Add(row);

}
*/


